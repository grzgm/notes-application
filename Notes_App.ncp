<Project>
  <Name>Notes_App</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>UML</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>AdminManager</Name>
        <Access>Public</Access>
        <Location left="114" top="1349" />
        <Size width="236" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IAccountRepository accountRepository</Member>
        <Member type="Constructor">public AdminManager(IAccountRepository accountRepository)</Member>
        <Member type="Method">public string CreateAdmin(string name, string email, string password, string adminRole)</Member>
        <Member type="Method">public Admin ReadAdmin(int id, string name, string email, string adminRole)</Member>
        <Member type="Method">public List&lt;Admin&gt; ReadAdmins(string name, string email, string adminRole)</Member>
        <Member type="Method">public void UpdateAdmin(int id, string name, string email, string adminRole)</Member>
        <Member type="Method">public void DeleteAdmin(int id)</Member>
        <Member type="Method">private Admin ConvertAccountDTOToAdmin(AccountDTO accountDTO)</Member>
        <Member type="Method">private List&lt;Admin&gt; ConvertAccountsDTOToAdmins(List&lt;AccountDTO&gt; accountDTOs)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Desktop_Presentation</Name>
        <Access>Public</Access>
        <Location left="985" top="48" />
        <Size width="163" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Web_Presentation</Name>
        <Access>Public</Access>
        <Location left="2244" top="48" />
        <Size width="163" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IUserManagerWeb</Name>
        <Access>Public</Access>
        <Location left="2144" top="433" />
        <Size width="362" height="112" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Account CreateUser(string name, string email, string password)</Member>
        <Member type="Method">Account ReadAccount(string name, string password)</Member>
        <Member type="Method">void CreatePremiumRequest(int userId)</Member>
      </Entity>
      <Entity type="Class">
        <Name>PremiumUser</Name>
        <Access>Public</Access>
        <Location left="786" top="1307" />
        <Size width="236" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int daysOfPremiumLeft</Member>
        <Member type="Constructor">public PremiumUser()</Member>
        <Member type="Constructor">public PremiumUser(AccountDTO accountDTO)</Member>
        <Member type="Constructor">public PremiumUser(int id, string name, string email, string password, int maxAmountOfNotes, int maxLengthOfNotes, bool isPremium, int daysOfPremiumLeft)</Member>
        <Member type="Property">public int DaysOfPremiumLeft { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserManager</Name>
        <Access>Public</Access>
        <Location left="1473" top="1585" />
        <Size width="429" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IAccountRepository accountRepository</Member>
        <Member type="Constructor">public UserManager(IAccountRepository accountRepository)</Member>
        <Member type="Method">private Account ConvertAccountDTO(AccountDTO accountDTO)</Member>
        <Member type="Method">private List&lt;Account&gt; ConvertAccountsDTO(List&lt;AccountDTO&gt; accountDTOs)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Admin</Name>
        <Access>Public</Access>
        <Location left="498" top="1307" />
        <Size width="236" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string adminRole</Member>
        <Member type="Constructor">public Admin()</Member>
        <Member type="Constructor">public Admin(AccountDTO accountDTO)</Member>
        <Member type="Constructor">public Admin(int id, string name, string email, string password)</Member>
        <Member type="Property">public string AdminRole { get; set; }</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>User</Name>
        <Access>Public</Access>
        <Location left="1082" top="1307" />
        <Size width="236" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected int maxAmountOfNotes</Member>
        <Member type="Field">protected int maxLengthOfNotes</Member>
        <Member type="Constructor">public User()</Member>
        <Member type="Constructor">public User(AccountDTO accountDTO)</Member>
        <Member type="Constructor">public User(int id, string name, string email, string password, int maxAmountOfNotes, int maxLengthOfNotes)</Member>
        <Member type="Property">public int MaxAmountOfNotes { get; set; }</Member>
        <Member type="Property">public int MaxLengthOfNotes { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NoteManager</Name>
        <Access>Public</Access>
        <Location left="1593" top="378" />
        <Size width="262" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly INoteRepository noteRepository</Member>
        <Member type="Constructor">public NoteManager(INoteRepository noteRepository)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>INoteManager</Name>
        <Access>Public</Access>
        <Location left="1543" top="192" />
        <Size width="363" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void CreateNote(int userId, string title, string text)</Member>
        <Member type="Method">List&lt;Note&gt; ReadNotes(int userId)</Member>
        <Member type="Method">void UpdateNote(int noteId, int userId, string title, string text)</Member>
        <Member type="Method">void DeleteNote(int noteId, int userId)</Member>
      </Entity>
      <Entity type="Class">
        <Name>Note</Name>
        <Access>Public</Access>
        <Location left="1630" top="552" />
        <Size width="189" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private int userId</Member>
        <Member type="Field">private string title</Member>
        <Member type="Field">private string text</Member>
        <Member type="Field">private DateTime creationDate</Member>
        <Member type="Field">private DateTime editDate</Member>
        <Member type="Constructor">public Note()</Member>
        <Member type="Constructor">public Note(NoteDTO noteDTO)</Member>
        <Member type="Constructor">public Note(int userId, int id, string title, string text)</Member>
        <Member type="Constructor">public Note(int userId, int id, string title, string text, DateTime creationDate, DateTime editDate)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Property">public int UserId { get; }</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Title { get; set; }</Member>
        <Member type="Property">public string Text { get; set; }</Member>
        <Member type="Property">public DateTime CreationDate { get; }</Member>
        <Member type="Property">public DateTime EditDate { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Account</Name>
        <Access>Public</Access>
        <Location left="786" top="789" />
        <Size width="236" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected int id</Member>
        <Member type="Field">protected string name</Member>
        <Member type="Field">protected string email</Member>
        <Member type="Field">protected string password</Member>
        <Member type="Constructor">protected Account()</Member>
        <Member type="Constructor">protected Account(int id, string name, string email, string password)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Email { get; set; }</Member>
        <Member type="Property">public string Password { get; set; }</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NoteRepository</Name>
        <Access>Public</Access>
        <Location left="1385" top="727" />
        <Size width="163" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private SqlConnection conn</Member>
        <Member type="Field">private string constr</Member>
        <Member type="Constructor">public NoteRepository()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NoteDTO</Name>
        <Access>Public</Access>
        <Location left="1207" top="727" />
        <Size width="163" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int UserId { get; set; }</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Title { get; set; }</Member>
        <Member type="Property">public string Text { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IUserManagerDesktop</Name>
        <Access>Public</Access>
        <Location left="869" top="425" />
        <Size width="395" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Account ReadUser(int userId, string name, string email)</Member>
        <Member type="Method">List&lt;Account&gt; ReadUsers(string name, string email)</Member>
        <Member type="Method">void UpdateUser(int userId, string name, string email, int maxAmountOfNotes, int maxLengthOfNotes, int? daysOfPremiumLeft = null)</Member>
        <Member type="Method">void DeleteUser(int userId)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IAccountRepository</Name>
        <Access>Public</Access>
        <Location left="678" top="1708" />
        <Size width="453" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">AccountDTO CreateUser(string name, string email, string password)</Member>
        <Member type="Method">AccountDTO ReadAccount(string name, string password)</Member>
        <Member type="Method">AccountDTO ReadUser(int id)</Member>
        <Member type="Method">List&lt;AccountDTO&gt; ReadUsers(string name, string email)</Member>
        <Member type="Method">void UpdateUser(int id, string name, string email, int maxAmountOfNotes, int maxLengthOfNotes, DateTime? endPremiumDate = null)</Member>
        <Member type="Method">void DeleteUser(int id)</Member>
        <Member type="Method">void CreatePremiumRequest(int userId)</Member>
        <Member type="Method">void CreateAdmin(string name, string email, string password, string adminRole)</Member>
        <Member type="Method">List&lt;AccountDTO&gt; ReadAdmins(string name, string email, string adminRole)</Member>
        <Member type="Method">void DeleteAdmin(int id)</Member>
      </Entity>
      <Entity type="Class">
        <Name>AccountRepository</Name>
        <Access>Public</Access>
        <Location left="823" top="2038" />
        <Size width="163" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private SqlConnection conn</Member>
        <Member type="Field">private string constr</Member>
        <Member type="Constructor">public AccountRepository()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>INoteRepository</Name>
        <Access>Public</Access>
        <Location left="1385" top="459" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void CreateNote(int userId, string title, string text)</Member>
        <Member type="Method">List&lt;NoteDTO&gt; ReadNotes(int userId)</Member>
        <Member type="Method">void UpdateNote(int noteId, int userId, string title, string text)</Member>
        <Member type="Method">void DeleteNote(int noteId, int userId)</Member>
      </Entity>
      <Entity type="Class">
        <Name>AccountDTO</Name>
        <Access>Public</Access>
        <Location left="1038" top="2038" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Email { get; set; }</Member>
        <Member type="Property">public string Password { get; set; }</Member>
        <Member type="Property">public int? AmountOfNotes { get; set; }</Member>
        <Member type="Property">public int? MaxAmountOfNotes { get; set; }</Member>
        <Member type="Property">public int? MaxLengthOfNotes { get; set; }</Member>
        <Member type="Property">public DateTime? StartPremiumDate { get; set; }</Member>
        <Member type="Property">public DateTime? EndPremiumDate { get; set; }</Member>
        <Member type="Property">public string AdminRole { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <Label>Asks to check if admin is in the system or asks to create new admin</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1010</X>
          <Y>296</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>228</X>
          <Y>380</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="3">
        <Label>Asks to check if account is in the system or asks to create new account</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="5" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1835</X>
          <Y>1560</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="8" second="10">
        <Label>Retrives notes</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="8" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="9">
        <Label>Asks for notes of logged Account</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2281</X>
          <Y>285</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1931</X>
          <Y>285</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="5" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1680</X>
          <Y>1430</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="1" second="14">
        <Label>Asks about inforation about users</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="16" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="1" second="9">
        <Label>Asks for notes of specyfic Account</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1133</X>
          <Y>289</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-IAccountRepository accountRepository</EndRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-IAccountRepository accountRepository</EndRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-INoteRepository noteRepository</EndRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="11">
        <Label>Retrives info about users</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1604</X>
          <Y>1477</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1062</X>
          <Y>1050</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="6">
        <Label>Retrives info about admins</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>